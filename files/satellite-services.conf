apply Service "Icinga Zone" {
  import "generic-service"
  check_command = "cluster-zone"
  vars.cluster_zone = host.name
  assign where host.vars.os == "linux"
  ignore where host.vars.noagent
}

apply Service "Icinga" {
  import "generic-service"
  check_command = "icinga"
  command_endpoint = host.name
  assign where host.vars.os == "linux"
}

apply Service "procs" {
  import "generic-service"
  check_command = "procs"
  vars.procs_warning = 400
  vars.procs_critical = 500
  command_endpoint = host.name
  assign where host.vars.os == "linux"
}

apply Service "load" {
  import "generic-service"
  check_command = "load"
  command_endpoint = host.name
  vars.load_percpu = true
  assign where host.vars.os == "linux"
}

apply Service "disks" {
  import "generic-service"
  check_command = "disk"
  command_endpoint = host.name
  vars.disk_ignore_ereg_path = "chroot"
  vars.disk_all = true
  assign where host.vars.os == "linux"
}

apply Service "swap" {
  import "generic-service"
  check_command = "swap"
  command_endpoint = host.name
  assign where host.vars.os == "linux"
  ignore where host.vars.noswap
}

apply Service "users" {
  import "generic-service"
  check_command = "users"
  command_endpoint = host.name
  assign where host.vars.os == "linux"
}

apply Service "sshd" {
  import "generic-service"
  check_command = "procs"
  vars.procs_command = "sshd"
  vars.procs_warning = "1:"
  vars.procs_critical = "1:"
  command_endpoint = host.name
  assign where host.vars.os == "linux"
}

apply Service "NTP Time" {
  import "generic-service"
  vars.ntp_warning = "1"
  vars.ntp_critical = "2"
  max_check_attempts = 10
  check_command = "ntp_time"
  command_endpoint = host.name
  assign where host.vars.os == "linux"
}

apply Service "memory" {
  import "generic-service"
  check_command = "mem"
  vars.mem_cache = true
  vars.mem_used = true
  vars.mem_warning = 80
  vars.mem_critical = 90
  command_endpoint = host.name
  assign where host.vars.os == "linux"
}

